name: Test and Deploy Code

on: [push, pull_request]

jobs:
  test:
    environment:
      name: Testing
    env:
      DATABASE_HOSTNAME: ${{ secrets.DATABASE_HOSTNAME }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: Pulling git repo
        uses: actions/checkout@v2
      - name: Install python version 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Installing Dependencies
        run: pip install -r requirements.txt
      - name: Testing the code
        run: |
          pip install pytest
          pytest -v
      # - name: Checkout
      #   uses: actions/checkout@v2
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1
      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/social_media_api.py:latest

  deploy:
    environment:
      name: Production
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Pulling git repo
        uses: actions/checkout@v2
      - name: Depoly to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
      # - name: deploy to ubuntu server
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{secrets.PROD_HOST}}
      #     username: ${{secrets.PROD_USERNAME}}
      #     password: ${{secrets.PROD_PASSWORD}}
      #     script: |
      #       cd app/src
      #       git pull
      #       echo ${{secrets.PROD_PASSWORD}} | sudo -S systemctl restart api
      # login to our ubuntu
      # cd /app/src
      # git pull
      # systemctl restart api
